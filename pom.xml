<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>org.camunda.community.extension.name</groupId>
  <artifactId>camunda-connectors-operate-issue</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>jar</packaging>

  <name>give-me-a-name</name>

  <scm>
    <url>https://github.com/camunda-community-hub/maven-template</url>
    <connection>scm:git:git@github.com:camunda-community-hub/maven-template.git</connection>
    <developerConnection>scm:git:git@github.com:camunda-community-hub/maven-template.git
    </developerConnection>
    <tag>HEAD</tag>
  </scm>

  <parent>
    <groupId>org.camunda.community</groupId>
    <artifactId>community-hub-release-parent</artifactId>
    <version>1.4.2</version>
    <relativePath/>
  </parent>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <version.java>11</version.java>
    <maven.version>3.0</maven.version>
    <kotlin.version>1.8.21</kotlin.version>
    <spring.boot.version>2.7.8</spring.boot.version>
    <!-- Camunda dependencies   -->
    <camunda-spring.version>8.2.1</camunda-spring.version>
    <!-- is working with connector bundle version 0.18.2 -->
    <camunda-connector-bundle.version>0.19.2</camunda-connector-bundle.version>
    <camunda-connector-sdk.version>0.9.0</camunda-connector-sdk.version>
    <zeebe-test-container.version>3.5.2</zeebe-test-container.version>
    <test-container.version>1.18.0</test-container.version>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.junit</groupId>
        <artifactId>junit-bom</artifactId>
        <version>5.8.2</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <dependency>
        <groupId>io.camunda.spring</groupId>
        <artifactId>spring-boot-starter-camunda</artifactId>
        <version>${camunda-spring.version}</version>
      </dependency>

      <dependency>
        <groupId>io.camunda.connector</groupId>
        <artifactId>connector-runtime-bundle</artifactId>
        <version>${camunda-connector-bundle.version}</version>
      </dependency>

      <dependency>
        <groupId>io.camunda.connector</groupId>
        <artifactId>connector-runtime-util</artifactId>
        <version>${camunda-connector-sdk.version}</version>
      </dependency>

      <dependency>
        <groupId>io.camunda.connector</groupId>
        <artifactId>connector-validation</artifactId>
        <version>${camunda-connector-sdk.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jetbrains.kotlin</groupId>
        <artifactId>kotlin-test</artifactId>
        <version>${kotlin.version}</version>
      </dependency>

      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-dependencies</artifactId>
        <version>${spring.boot.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <dependency>
        <groupId>io.zeebe</groupId>
        <artifactId>zeebe-test-container</artifactId>
        <version>${zeebe-test-container.version}</version>
      </dependency>

      <dependency>
        <groupId>org.testcontainers</groupId>
        <artifactId>junit-jupiter</artifactId>
        <version>${test-container.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jetbrains.kotlin</groupId>
        <artifactId>kotlin-stdlib</artifactId>
        <version>${kotlin.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jetbrains.kotlin</groupId>
        <artifactId>kotlin-reflect</artifactId>
        <version>${kotlin.version}</version>
      </dependency>

    </dependencies>
  </dependencyManagement>

  <dependencies>

    <!-- Camunda dependencies -->

    <dependency>
      <groupId>io.camunda.spring</groupId>
      <artifactId>spring-boot-starter-camunda</artifactId>
    </dependency>

    <dependency>
      <groupId>io.camunda.connector</groupId>
      <artifactId>connector-runtime-bundle</artifactId>
    </dependency>

    <dependency>
      <groupId>io.camunda.connector</groupId>
      <artifactId>connector-runtime-util</artifactId>
    </dependency>

    <dependency>
      <groupId>io.camunda.connector</groupId>
      <artifactId>connector-validation</artifactId>
    </dependency>

    <!-- Spring dependencies -->

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>

    <!-- Kotlin dependencies -->

    <dependency>
      <groupId>org.jetbrains.kotlin</groupId>
      <artifactId>kotlin-stdlib</artifactId>
    </dependency>

    <!-- Test dependencies  -->

    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <version>3.23.1</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.awaitility</groupId>
      <artifactId>awaitility-kotlin</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>io.zeebe</groupId>
      <artifactId>zeebe-test-container</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>junit-jupiter</artifactId>
      <scope>test</scope>
    </dependency>

  </dependencies>

  <build>

    <sourceDirectory>src/main/kotlin</sourceDirectory>
    <testSourceDirectory>src/test/kotlin</testSourceDirectory>

    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <version>3.1.0</version>
        <configuration>
          <rules>
            <dependencyConvergence/>
          </rules>
        </configuration>
        <executions>
          <execution>
            <phase>verify</phase>
            <goals>
              <goal>enforce</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>3.4.0</version>
      </plugin>

      <!-- Google code format plugin -->
      <plugin>
        <groupId>com.spotify.fmt</groupId>
        <artifactId>fmt-maven-plugin</artifactId>
        <version>2.20</version>
        <executions>
          <execution>
            <goals>
              <goal>format</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- JaCoCo Plugin -->
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>0.8.8</version>
        <executions>
          <execution>
            <id>coverage-initialize</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
          <execution>
            <id>coverage-report</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>report</goal>
            </goals>
          </execution>
          <!-- Threshold -->
        </executions>
      </plugin>
      <!-- Surefire plugin -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>3.0.0-M7</version>
      </plugin>

      <!-- flaky test extractor plugin -->
      <plugin>
        <groupId>io.zeebe</groupId>
        <artifactId>flaky-test-extractor-maven-plugin</artifactId>
        <version>2.1.1</version>
        <executions>
          <execution>
            <phase>post-integration-test</phase>
            <goals>
              <goal>extract-flaky-tests</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- Kotlin     -->
      <plugin>
        <groupId>org.jetbrains.kotlin</groupId>
        <artifactId>kotlin-maven-plugin</artifactId>
        <version>${kotlin.version}</version>
        <configuration>
          <args>
            <arg>-Xjsr305=strict</arg>
          </args>
          <compilerPlugins>
            <plugin>spring</plugin>
          </compilerPlugins>
          <jvmTarget>${version.java}</jvmTarget>
        </configuration>
        <dependencies>
          <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-maven-allopen</artifactId>
            <version>${kotlin.version}</version>
          </dependency>
          <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-maven-noarg</artifactId>
            <version>${kotlin.version}</version>
          </dependency>
        </dependencies>
        <executions>
          <execution>
            <id>compile</id>
            <phase>compile</phase>
            <goals>
              <goal>compile</goal>
            </goals>
          </execution>
          <execution>
            <id>test-compile</id>
            <phase>test-compile</phase>
            <goals>
              <goal>test-compile</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- Spring -->
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <version>${spring.boot.version}</version>
        <executions>
          <execution>
            <goals>
              <goal>repackage</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

    </plugins>
  </build>

</project>
